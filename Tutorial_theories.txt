Terrain distribution and modification

Each terrain has a required theme level to be generated, e.g.:

[nature]
grass:15
bush:30
tree:50
specials:95

The terrain probabilities are calculated for each theme: current level of the theme is divided by each terrain requirement to get the probabilities. The lists for all themes are concatenated and a random roll from 0 to the total sum of probabilities gives the chosen terrain.
Terrains are modified at the rolling step based on the modification entries for themes in the area, e.g.:

[temperature]
dirt:sand>66,snow<33 (Gradually change dirt to snow when temperature<33, or to sand when temperature>66)
grass:sand>66,snow<33
lost_shrine:vulcanic_fissure&>66 (Always change to vulcanic_fissure when temperature>66)
graveyard:bottomless_sand_vortex&>66,frozen_graveyard&<33
trading_outpost:sand_pits&>66
druidic_grove:magical_oasis&>66,lichen_farm&<33
tree:frozen_tree<33,ice_block<20
rock:ice_block|<20

The general format is:
terrain1:terrain2[< or >]threshold for gradual change, and
terrain1:terrain2&[< or >]threshold for complete change.

Modifications delimited with the < or > characters have a probability to occur equal to max(0,(theme_value-threshold)/(100-threshold)) for "greater than" (>) modifications, and max(0,(threshold-theme_value)/threshold) for "less than" (<) modifications.
Modifications delimited with the '&' (ampersand) character followed by a '<'/'>' character always occur (probability of 1). If more than one of those is available the one coming from the theme with the highest level is used.

For each terrain all available modifications from all themes are checked starting with the most probable one. When a modification occurs the process stops and the next terrain is picked and modified.

A theme can have both regular terrain definitions and modifications, e.g.:

[chaos]
dirt:15
thorns:30
waste_pile:50
specials:95
grass:diseased_grass|>15
bush:thorns|>15
tree:diseased_tree|>15
water:dirty_water|>15

This creates ways to make a mix of themes look unique and offer unique challenges.


Theme distribution models
Peaks/Poles...

Theme interaction

There are two ways to make themes interact with one another: scaling groups and limitation chains.
A scaling group is defined using the "group" property in the themes.ini file. When you set the group of two or more themes to the same value they form a group. If the sum of the values of themes in a group is higher than 100 the whole group is scaled down to have a total sum of 100. This is the case with the three forces of Nature, Order and Chaos in the Balance game. There is not restriction to the number of themes in a group.
A limitation chain is created when you define the "limited_by" property for a theme in the themes.ini file. The value should be the name of another theme. This creates a chain of length 2, of one limited and one limiting theme. If you then set a "limited_by" value for the limiting theme (which must be a different, third theme!) you get a chain of length 3, etc. Each limited theme can only have values between 0 and (100 minus its limiting theme level). This is the case with the 'temperature', 'altitude' and 'water' themes in the Balance game:
- temperature is limited by altitude, meaning that every spot with a value for altitude adjusts the max temperature available so that the two sum up to 100 at most, with altitude having precedence by being calculated before temperature (so snowy mountains at the equator are possible).
- altitude is limited by water, so that where there is water the land is lower, down to sea level with 100 water and the ocean.
The order of calculating the actual values starts with the end of the limited_by chain as follows:

 1) Water, as the root limiting theme is calculated based on its distribution model.
 2) Altitude is calculated based on its own model, but then limited to 100-Water.
 3) Temp is calculated based on its own model, but finally limited to 100-Altitude.

A theme can be both part of a scaling group and a limitation chain. All limitation chains are applied first to get the maximum possible values of themes. Once all themes have a value, scaling is applied to each group if needed.
