**Terrain and structure distribution**

Each theme that causes specific terrains to appear in the game has a distribution that specifies how likely these terrains are to appear relative to one another, e.g.:

# From terrain_distribution.ini
[nature]
grass:15
bush:30
tree:50

The odds to generate a terrain for the current scene are defined after the distribution for the theme is scaled by the level of the theme for the current area. This way terrains of high-level themes have a higher probability of appearance than those of low- or zero-level themes. The scaled distributions for all themes are concatenated and a random roll from 0 to the total sum of odds gives the chosen terrain.

Unlike terrains, structures cannot appear if the minimum requirement is not met:

# From structure_distribution.ini
[DEFAULT]
max_structures:1

[nature]
beast_lair:66
druidic_grove:66

Here a beast's lair or a druidic grove will be created only if the Nature theme reaches 66. However, if the requirements are met a structure will always be created.
By default only one structure per theme can be generated in an area, but this can be overridden if needed:

[population]
max_structures:15
field:30
house:45

In this case the respective number of structures is generated and passed to the scene, which decides their placement. If there is not enough space for all of the created structures the scene will limit itself to those that fit.

**Terrain and structure modification**

Terrains are modified at the rolling step based on the modification entries for themes in the area, e.g.:

# From terrain_modifiers.ini
[chaos]
grass:diseased_grass>15  # Provide a chance to change grass terrain into diseased grass
tree:diseased_tree>15

Modifications have a probability to occur equal to max(0,(theme_value-threshold)/(100-threshold)) for "greater than" (>) modifications, and max(0,(threshold-theme_value)/threshold) for "less than" (<) modifications.
For each terrain all available modifications from all themes are checked starting with the most probable one. When a modification occurs the process stops and the next terrain is picked and modified. This creates ways to make mixed themes look unique and offer unique challenges.

Structures can also be modified:

# From structure_modifiers.ini
[chaos]
lake:miasma>45

Just like with distributions, a structure is always modified when the requirement is met. If there is more than one available modification for a structure (irrespective of the theme they come from) the one with the highest theme level requirement is applied. The only restriction is the max_number property of each structure that allows you to limit the number of times a specific structure appears. For example, the Population modifiers in Balance are as follows:

[population]
field:house>60
house:mansion>75
house:palace>90

Here the palace structure has a max_number of 1. Otherwise this would generate unexpected scenes if all houses in a highly populated area are turned into palaces (unless that's what you actually want). In the case of more than one available modification if the first one reaches its limit then the next one is used (e.g. after creating one palace the next house will be made a mansion, and so on).

**Theme distribution models**
Peaks/Poles...

**Theme interaction**

There are two ways to make themes interact with one another: scaling groups and limitation chains.
A scaling group is defined using the "group" property in the themes.ini file. When you set the group of two or more themes to the same value they form a group. If the sum of the values of themes in a group is higher than 100 the whole group is scaled down to have a total sum of 100. This is the case with the three forces of Nature, Order and Chaos in the Balance game. There is not restriction to the number of themes in a group.
A limitation chain is created when you define the "limited_by" property for a theme in the themes.ini file. The value should be the name of another theme. This creates a chain of length 2, of one limited and one limiting theme. If you then set a "limited_by" value for the limiting theme (which must be a different, third theme!) you get a chain of length 3, etc. Each limited theme can only have values between 0 and (100 minus its limiting theme level). This is the case with the 'temperature', 'altitude' and 'water' themes in the Balance game:
- temperature is limited by altitude, meaning that every spot with a value for altitude adjusts the max temperature available so that the two sum up to 100 at most, with altitude having precedence by being calculated before temperature (so snowy mountains at the equator are possible).
- altitude is limited by water, so that where there is water the land is lower, down to sea level with 100 water and the ocean.
The order of calculating the actual values starts with the end of the limited_by chain as follows:

 1) Water, as the root limiting theme is calculated based on its distribution model.
 2) Altitude is calculated based on its own model, but then limited to 100-Water.
 3) Temp is calculated based on its own model, but finally limited to 100-Altitude.

A theme can be both part of a scaling group and a limitation chain. All limitation chains are applied first to get the maximum possible values of themes. Once all themes have a value, scaling is applied to each group if needed.
